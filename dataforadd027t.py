# -*- coding: utf-8 -*-
"""DataForAdd027t.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/127jmrZ9Szyj1MGDikOZV-1_KCpbrgIHA
"""

import pandas as pd
from google.colab import drive
drive.mount('/content/drive/')

!ls

import sqlite3

conn = sqlite3.connect("MonographsWithNo338.db")

cursor = conn.cursor()

cursor.execute("DROP TABLE IF EXISTS MonographsWithNo338")

"""MARCEdit process for identifying 027 with no 008/24-27 "t" (microforms only, also print SH's)"""

Field027s = pd.read_table('/content/drive/My Drive/Data Services/API Batch Edits On-Boarding/DataforAPIOnboarding/Field027s.txt', header=0, delimiter='\t', low_memory=False, encoding = 'ISO-8859-1')

column_names = list(Field027s.columns.values)
print(column_names)

Field027s.to_sql("Print027s", conn, if_exists='replace', index=False)

Bibs027 = pd.read_sql("""SELECT * FROM Print027s WHERE [000$06] Not In ('u','v','x','y')""", conn)

Bibs027.to_sql("Bibs027", conn, if_exists='replace', index=False)

Microform027NoContt = pd.read_sql("""SELECT [001], [027$a], [650$a], [650$x] FROM Bibs027 WHERE [000$06] =='a' AND [000$07] == 'm' AND [008$23] In ('a', 'b') AND [008$24] != 't' AND [008$25] != 't' AND [008$26] != 't' AND [008$27] != 't' AND [027$a] Is Not Null""", conn)

len(Microform027NoContt)

Microform027NoContt.head(10)

Microform027NoContt.to_csv('/content/drive/My Drive/Data Services/API Batch Edits On-Boarding/DataforAPIOnboarding/Field027s.csv')

"""Pymarc process for identifying 027 with no 008/24-27 "t" (microforms only, also print SH's)"""

import csv
import numpy as np

csv_out = csv.writer(open('/content/drive/My Drive/Data Services/MARCSnapshots/202407/MultipleMultivalProtoBibs.csv', 'w'), delimiter = ',', quotechar = '"', quoting = csv.QUOTE_MINIMAL)

from pymarc import MARCReader

with open('/content/drive/My Drive/Data Services/MARCSnapshots/All20240314FINAL.mrc', 'rb') as fh:
    reader = MARCReader(fh)
    for record in reader:
      try:
        OCN = record['001']
        OCN = str(OCN).replace('=001', '')
        LDR06 = record.leader[6]
        LDR07 = record.leader[7]
        for field in record.get_fields('008'):
          field008data = field.value()
          field00823 = field008data[23]
          field00824 = field008data[24]
          field00825 = field008data[25]
          field00826 = field008data[26]
          field00827 = field008data[27]
        title = (record['245']['a'])
        subjects = record.get_fields('650')
        field027s = record.get_fields('027')
        if not subjects:
          if not field027s:
            csv_out.writerow([OCN, LDR06, LDR07, field00823, field00824, field00825, field00826, field00827, title])
          else:
            for field027 in field027s:
              for subfield in field027.subfields:
                if subfield.code == 'a':
                  field027 = str(subfield.value)
                  subject = str("No subjects")
                  csv_out.writerow([OCN, LDR06, LDR07, field00823, field00824, field00825, field00826, field00827, title, subject, field027])
        else:
            for subject in subjects:
              if not field027s:
                csv_out.writerow([OCN, LDR06, LDR07, field00823, field00824, field00825, field00826, field00827, title, subject])
              else:
                for field027 in field027s:
                  for subfield in field027.subfields:
                    if subfield.code == 'a':
                      field027 = str(subfield.value)
                      csv_out.writerow([OCN, LDR06, LDR07, field00823, field00824, field00825, field00826, field00827, title, subject, field027])

      except KeyError:
            pass

colnames = ['OCN', 'LDR06', 'LDR07', 'field00823', 'field00824', 'field00825', 'field00826', 'field00827', 'title', 'subjects','fields027']
Field027Bibs = pd.read_csv('/content/drive/My Drive/Data Services/MARCSnapshots/202407/MultipleMultivalProtoBibs.csv', names=colnames, low_memory=False)
column_headers = list(Field027Bibs.columns.values)
print(column_headers)

Field027Bibs.head(5)

Field027Bibs['subjects'] = Field027Bibs['subjects'].str.replace('=650 ', '')

#Field027Bibs['fields027'] = Field027Bibs['fields027'].str.replace('=027 ', '')

Field027Bibs['subjects'].fillna("No subjects", inplace = True)

Field027Bibs['fields027'].fillna("No 027", inplace = True)

Field027Bibs = Field027Bibs.groupby('OCN').agg({'LDR06':'first', 'LDR07':'first', 'field00823':'first', 'field00824':'first', 'field00825':'first', 'field00826':'first', 'field00827':'first', 'title':'first', 'subjects': '; '.join, 'fields027': '; '.join}).reset_index()

Field027Bibs.head(15)

Field027Bibs.to_csv('/content/drive/My Drive/Data Services/API Batch Edits On-Boarding/DataforAPIOnboarding/Field027Bibs.csv')

Pymarc027Bibs = pd.read_csv('/content/drive/My Drive/Data Services/API Batch Edits On-Boarding/DataforAPIOnboarding/Field027Bibs.csv')

colnamesb = ['LCN', 'LHRLDR06', 'LHROCN', 'Code','Location']
Pymarc027LHRs = pd.read_csv('/content/drive/My Drive/Data Services/MARCSnapshots/202407/LHRs.csv', names=colnamesb)

Pymarc027Bibs.to_sql("Pymarc027Bibs", conn, if_exists='replace', index=False)

Pymarc027Bibs = pd.read_sql("""SELECT * FROM Pymarc027Bibs WHERE [LDR06] Not In ('u','v','x','y')""", conn)

Pymarc027Bibs.head(5)

Pymarc027LHRs['LHROCN'] = Pymarc027LHRs['LHROCN'].astype(str)
Pymarc027Bibs['OCN'] = Pymarc027Bibs['OCN'].astype(str)

Pymarc027Bibs['OCN'] = Pymarc027Bibs['OCN'].str.strip()
Pymarc027LHRs['LHROCN'] = Pymarc027LHRs['LHROCN'].str.strip()

Pymarc027Bibs.to_sql("Pymarc027Bibs", conn, if_exists='replace', index=False)

test = pd.read_sql("""SELECT * FROM Pymarc027Bibs""", conn)

test.head(5)

Pymarc027LHRs.to_sql("Pymarc027LHRs", conn, if_exists='replace', index=False)

len(Pymarc027LHRs)

Joined027Holdings = pd.read_sql("""SELECT Pymarc027Bibs.[OCN], Pymarc027Bibs.[LDR06], Pymarc027Bibs.[LDR07], Pymarc027Bibs.[field00823], Pymarc027Bibs.[field00824], Pymarc027Bibs.[field00825], Pymarc027Bibs.[field00826], Pymarc027Bibs.[field00827], Pymarc027Bibs.[title], Pymarc027Bibs.[subjects], Pymarc027Bibs.[fields027], Pymarc027LHRs.[LCN], Pymarc027LHRs.[LHRLDR06], Pymarc027LHRs.[LHROCN], Pymarc027LHRs.[Code], Pymarc027LHRs.[Location] FROM Pymarc027Bibs INNER JOIN Pymarc027LHRs ON Pymarc027Bibs.[OCN]=Pymarc027LHRs.[LHROCN]""", conn)

Joined027Holdings.to_sql("Joined027Holdings", conn, if_exists='replace', index=False)

PymarcField027s = pd.read_sql("""SELECT DISTINCT([OCN]) FROM Joined027Holdings WHERE [fields027] Not Like '%No 027%' AND [LDR06] == 'a' AND [LDR07] == 'm' AND (([field00823] =='a') OR ([field00823] == 'b')) AND [field00824] != 't' AND [field00825] != 't' AND [field00826] != 't' AND [field00827] != 't'""", conn)

len(PymarcField027s)

PymarcField027s.to_csv('/content/drive/My Drive/Data Services/API Batch Edits On-Boarding/DataforAPIOnboarding/PymarcField027s.csv')

"""Troubleshooting why some things in pymarc results that don't have an 027 (i.e. was the insertion of "No 027" in NaN unsuccessful?)"""

pd.read_sql("""SELECT * FROM Joined027Holdings WHERE [OCN] Like '%42711771%'""", conn)

pd.read_sql("""SELECT * FROM Bibs027 WHERE [001] Like '%42711771%'""", conn)

pd.read_sql("""SELECT * FROM Joined027Holdings WHERE [OCN] Like '%42712643%'""", conn)

pd.read_sql("""SELECT * FROM Bibs027 WHERE [001] Like '%42712643%'""", conn)

"""Looks like 027's were actually converted to 490's between 7/24/2024 (pymarc) and 8/2024 (MARCEdit)."""